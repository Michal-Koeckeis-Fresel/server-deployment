#!/bin/bash

# 

# BunkerWeb Configuration File with Redis Support

# This file contains default settings for the BunkerWeb setup script

# Command line arguments will override these values

# 

# IMPORTANT: Edit the values below before running the setup script!

# 

# Default admin username

ADMIN_USERNAME=“admin”

# Domain Configuration

# FQDN=””                        # Fully Qualified Domain Name (auto-detected if not set)

# SERVER_NAME=””                 # Primary domain name (same as FQDN in single domain setups)

# BunkerWeb Instance Configuration

BUNKERWEB_INSTANCES=“127.0.0.1” # List of BunkerWeb instances separated by spaces

# Multisite Configuration

MULTISITE=“yes”                  # Enable multisite mode (supports multiple domains)

# Security Configuration

SECURITY_MODE=“block”            # Security level: detect or block (default: block)
SERVER_TYPE=“http”               # Server type: http or stream (default: http)

# Greylist Configuration (Admin Interface Protection)

USE_GREYLIST=“no”                # Enable greylist for admin interface (default: no)

# GREYLIST_IP=””                 # IP addresses/networks to greylist (auto-detected from SSH)

# GREYLIST_RDNS=””               # Reverse DNS suffixes to greylist

# MySQL Database Configuration

MYSQL_RANDOM_ROOT_PASSWORD=“no” # Set to “no” for controlled root password (default: no)

# MYSQL_ROOT_PASSWORD=””         # Custom root password (auto-generated if empty)

# Redis Configuration (Cluster Mode)

USE_REDIS=“yes”                  # Enable Redis for cluster mode (default: yes for cluster)
REDIS_HOST=“bw-redis”            # Redis hostname (default: bw-redis for Docker)
REDIS_PORT=“6379”                # Redis port (default: 6379)
REDIS_DATABASE=“0”               # Redis database number (default: 0)
REDIS_SSL=“no”                   # Use SSL/TLS with Redis (default: no)
REDIS_SSL_VERIFY=“no”            # Verify Redis SSL certificate (default: no)
REDIS_TIMEOUT=“1000”             # Redis timeout in milliseconds (default: 1000)

# REDIS_USERNAME=””              # Redis username (optional)

# REDIS_PASSWORD=””              # Redis password (auto-generated if empty)

REDIS_KEEPALIVE_IDLE=“30000”     # Max idle time before closing connection (default: 30000ms)
REDIS_KEEPALIVE_POOL=“10”        # Connection pool size (default: 10)

# Syslog Configuration (Centralized Logging)

USE_SYSLOG=“yes”                 # Enable syslog for centralized logging (default: yes)
SYSLOG_ADDRESS=“10.10.10.254”   # Syslog server IP address (default: 10.10.10.254)
SYSLOG_PORT=“514”                # Syslog server port (default: 514)
SYSLOG_PROTOCOL=“udp”            # Syslog protocol: udp or tcp (default: udp)
SYSLOG_NETWORK=“10.10.10.0/24”  # Syslog network subnet (default: 10.10.10.0/24)

# SYSLOG_IMAGE=””                # Custom syslog image (auto-detected based on architecture)

# Data Preservation Configuration

KEEP_REDIS=“no”                  # Preserve Redis data and container during uninstall (default: no)
KEEP_DATA=“no”                   # Preserve all BunkerWeb data during uninstall (default: no)
KEEP_SYSLOG=“no”                 # Preserve syslog data and container during uninstall (default: no)

# Redis Sentinel Configuration (for High Availability)

# REDIS_SENTINEL_HOSTS=””        # Sentinel hosts: “host1:port1 host2:port2”

# REDIS_SENTINEL_USERNAME=””     # Sentinel username

# REDIS_SENTINEL_PASSWORD=””     # Sentinel password

# REDIS_SENTINEL_MASTER=””       # Sentinel master name

# SSL Certificate Configuration

AUTO_CERT_TYPE=“LE”              # Certificate type: LE or ZeroSSL (Note: ZeroSSL is draft - not yet implemented)
AUTO_CERT_CONTACT=“me@example.com”  # Contact email for certificates (CHANGE THIS!)

# AUTO_CERT_ZSSL_API=””          # ZeroSSL API key (draft feature)

# Let’s Encrypt Advanced Options

# LETS_ENCRYPT_CHALLENGE=“http”  # Challenge type: http or dns

# LETS_ENCRYPT_STAGING=“yes”     # Use staging environment: yes or no (default: yes for safety)

# LETS_ENCRYPT_WILDCARD=“no”     # Enable wildcard certificates: yes or no (DNS only)

# SYSLOG CONFIGURATION:

# Syslog provides centralized logging for all BunkerWeb components.

# Benefits include:

# - Centralized log management and analysis

# - Log aggregation from multiple instances

# - Better log rotation and retention

# - Integration with SIEM systems

# - Real-time log monitoring

# 

# For production environments:

# 1. Enable syslog for better log management

# 2. Configure proper log retention policies

# 3. Consider external syslog servers for HA

# 4. Set up log monitoring and alerting

# 

# For development environments:

# 1. Syslog can be disabled to reduce complexity

# 2. Docker logs are sufficient for debugging

# 3. Enable when testing log aggregation

# 

# REDIS CLUSTER CONFIGURATION:

# Redis is essential for cluster mode to coordinate between multiple BunkerWeb instances.

# It stores shared configuration, caching data, and synchronization information.

# 

# For production clusters:

# 1. Use a dedicated Redis server or cluster

# 2. Enable Redis authentication (REDIS_PASSWORD)

# 3. Consider Redis Sentinel for high availability

# 4. Configure appropriate memory limits and persistence

# 

# For single instance deployments:

# 1. Set USE_REDIS=“no” to disable Redis

# 2. This reduces resource usage for simple setups

# 

# MYSQL CONFIGURATION:

# MYSQL_RANDOM_ROOT_PASSWORD=“no” means root password will be set to a known value

# MYSQL_ROOT_PASSWORD will be auto-generated if not specified

# This allows for controlled access to the database root user

# 

# TO ENABLE SSL CERTIFICATES:

# 1. Change AUTO_CERT_CONTACT above from me@example.com to your real email address

# 2. Optionally set FQDN to your domain name

# 3. Run the script

# 

# TO DISABLE SSL CERTIFICATES:

# 1. Comment out AUTO_CERT_TYPE (add # at the beginning)

# 2. Run the script

# 

# MULTISITE MODE:

# Multisite is enabled by default, allowing you to host multiple domains.

# Each domain can have individual configurations using SERVER_NAME prefixes.

# Example: www.example.com_USE_ANTIBOT=captcha

# 

# GREYLIST PROTECTION:

# Enable USE_GREYLIST=yes to protect admin interface with IP restrictions.

# GREYLIST_IP will be auto-populated with SSH connection IPs during setup.

# GREYLIST_RDNS can be used to allow access from specific domain suffixes.

# Uncomment and configure the settings below as needed:

# Example domain configuration:

# FQDN=“bunkerweb.yourdomain.com”

# SERVER_NAME=“bunkerweb.yourdomain.com”

# Example syslog configuration:

# USE_SYSLOG=“yes”

# SYSLOG_ADDRESS=“192.168.1.100”

# SYSLOG_PORT=“514”

# SYSLOG_PROTOCOL=“udp”

# SYSLOG_NETWORK=“192.168.1.0/24”

# Example syslog with custom image:

# USE_SYSLOG=“yes”

# SYSLOG_IMAGE=“lscr.io/linuxserver/syslog-ng:latest”

# SYSLOG_ADDRESS=“10.10.10.254”

# Example external syslog server:

# USE_SYSLOG=“yes”

# SYSLOG_ADDRESS=“syslog.yourdomain.com”

# SYSLOG_PORT=“6514”

# SYSLOG_PROTOCOL=“tcp”

# Example data preservation with syslog:

# KEEP_SYSLOG=“yes”

# KEEP_DATA=“yes”

# Example Redis cluster configuration:

# USE_REDIS=“yes”

# REDIS_HOST=“redis-cluster.yourdomain.com”

# REDIS_PORT=“6379”

# REDIS_PASSWORD=“your-secure-redis-password”

# REDIS_SSL=“yes”

# REDIS_SSL_VERIFY=“yes”

# Example Redis Sentinel configuration:

# USE_REDIS=“yes”

# REDIS_SENTINEL_HOSTS=“sentinel1.yourdomain.com:26379 sentinel2.yourdomain.com:26379”

# REDIS_SENTINEL_MASTER=“bunkerweb-master”

# REDIS_SENTINEL_USERNAME=“sentinel-user”

# REDIS_SENTINEL_PASSWORD=“sentinel-password”

# Example MySQL configuration:

# MYSQL_RANDOM_ROOT_PASSWORD=“no”

# MYSQL_ROOT_PASSWORD=“my-secure-root-password”

# Example greylist configuration:

# USE_GREYLIST=“yes”

# GREYLIST_IP=“192.168.1.0/24 10.0.0.1”

# GREYLIST_RDNS=“yourdomain.com yourcompany.com”

# Example Let’s Encrypt HTTP Challenge (staging by default for safety):

# AUTO_CERT_TYPE=“LE”

# AUTO_CERT_CONTACT=“admin@yourdomain.com”

# FQDN=“bunkerweb.yourdomain.com”

# LETS_ENCRYPT_CHALLENGE=“http”

# LETS_ENCRYPT_STAGING=“yes”

# Example Let’s Encrypt Production (disable staging):

# AUTO_CERT_TYPE=“LE”

# AUTO_CERT_CONTACT=“admin@yourdomain.com”

# FQDN=“bunkerweb.yourdomain.com”

# LETS_ENCRYPT_CHALLENGE=“http”

# LETS_ENCRYPT_STAGING=“no”

# Example Let’s Encrypt DNS Challenge with Wildcard:

# AUTO_CERT_TYPE=“LE”

# AUTO_CERT_CONTACT=“admin@yourdomain.com”

# FQDN=“yourdomain.com”

# LETS_ENCRYPT_CHALLENGE=“dns”

# LETS_ENCRYPT_WILDCARD=“yes”

# Example Let’s Encrypt Staging (for testing):

# AUTO_CERT_TYPE=“LE”

# AUTO_CERT_CONTACT=“admin@yourdomain.com”

# FQDN=“test.yourdomain.com”

# LETS_ENCRYPT_STAGING=“yes”

# Example ZeroSSL configuration (DRAFT - NOT YET IMPLEMENTED):

# AUTO_CERT_TYPE=“ZeroSSL”

# AUTO_CERT_CONTACT=“admin@yourdomain.com”

# AUTO_CERT_ZSSL_API=“your-zerossl-api-key”

# FQDN=“bunkerweb.yourdomain.com”