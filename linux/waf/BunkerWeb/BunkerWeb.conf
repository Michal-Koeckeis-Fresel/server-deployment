#!/bin/bash
#
# Copyright (c) 2025 Michal Koeckeis-Fresel
# 
# This software is dual-licensed under your choice of:
# - MIT License (see LICENSE-MIT)
# - GNU Affero General Public License v3.0 (see LICENSE-AGPL)
# 
# SPDX-License-Identifier: MIT OR AGPL-3.0-or-later
#

# BunkerWeb Configuration File
# Edit the values below before running the setup script

# Debug Configuration
# Enable debug mode: yes or no (default: no)
DEBUG="yes"

# Default admin username
ADMIN_USERNAME="bw-admin"

# Release Channel Configuration
# Options: latest, RC, dev, testing, nightly, X.Y.Z (e.g., 1.6.1)
RELEASE_CHANNEL="dev"

# SSL Certificate Configuration
# Certificate type: LE or ZeroSSL
AUTO_CERT_TYPE="LE"
# Contact email for certificates (CHANGE THIS!)
AUTO_CERT_CONTACT="me@example.com"

# Domain Configuration
# we have an autodetect feature built in
# if your server already has a correct FQDN you don't need to enter anything here
# Fully Qualified Domain Name (auto-detected if not set)
FQDN=""
# Primary domain name (same as FQDN in single domain setups)
SERVER_NAME=""

# Network Configuration
# Space-separated list of CIDR networks to avoid
PRIVATE_NETWORKS_ALREADY_IN_USE=""
# Preferred subnet for Docker (auto-selected if empty)
PREFERRED_DOCKER_SUBNET=""

# BunkerWeb Instance Configuration
BUNKERWEB_INSTANCES="127.0.0.1"

# Multisite Configuration
# Enable multisite mode (supports multiple domains)
MULTISITE="yes"

# Security Configuration
# Security level: detect or block
SECURITY_MODE="block"
# Server type: http or stream
SERVER_TYPE="http"

# Access Control Configuration
# The security features for blacklisting, whitelisting, and greylisting provide flexible access control:
# 
# Blacklisting: If a specific criterion is met, the client will be blocked.
# Whitelisting: If a specific criterion is met, the client will be allowed, bypassing all additional 
# security checks.
# Greylisting: If a specific criterion is met, the client will be allowed but subjected to additional 
# security checks else the client will be blocked.
# 
# These mechanisms can be configured simultaneously. If all three are enabled and a client meets 
# criteria for multiple lists, whitelisting takes precedence, followed by blacklisting, and finally 
# greylisting. In such cases, a whitelisted client will bypass both blacklisting and greylisting, 
# regardless of overlapping criteria.

# Blacklist Configuration (Global IP/Network/rDNS/ASN Blocking)
# Enable blacklist feature
USE_BLACKLIST="yes"
# List of IP/network, separated with spaces, to block
BLACKLIST_IP=""
# List of reverse DNS suffixes, separated with spaces, to block
BLACKLIST_RDNS=".shodan.io .censys.io"
# Only perform RDNS blacklist checks on global IP addresses
BLACKLIST_RDNS_GLOBAL="yes"
# List of ASN numbers, separated with spaces, to block
BLACKLIST_ASN=""
# List of User-Agent (PCRE regex), separated with spaces, to block
BLACKLIST_USER_AGENT=""
# List of URI (PCRE regex), separated with spaces, to block
BLACKLIST_URI=""

# Blacklist Ignore Lists (Whitelist exceptions within blacklists)
# List of IP/network, separated with spaces, to ignore in the blacklist
BLACKLIST_IGNORE_IP=""
# List of reverse DNS suffixes, separated with spaces, to ignore in the blacklist
BLACKLIST_IGNORE_RDNS=""
# List of ASN numbers, separated with spaces, to ignore in the blacklist
BLACKLIST_IGNORE_ASN=""
# List of User-Agent (PCRE regex), separated with spaces, to ignore in the blacklist
BLACKLIST_IGNORE_USER_AGENT=""
# List of URI (PCRE regex), separated with spaces, to ignore in the blacklist
BLACKLIST_IGNORE_URI=""

# Blacklist External URLs (Automatic blocklist downloads)
# TOR Exit Nodes: https://www.dan.me.uk/torlist/?exit
# FireHOL Level 3: https://iplists.firehol.org/files/firehol_level3.netset 
# (FireHOL Level 3 includes IPs with the worst reputation - spammers, scanners, attackers)
# URLs containing bad IP/network to block
BLACKLIST_IP_URLS="https://www.dan.me.uk/torlist/?exit \
https://iplists.firehol.org/files/firehol_level3.netset"
# URLs containing reverse DNS suffixes to block
BLACKLIST_RDNS_URLS=""
# URLs containing ASN to block
BLACKLIST_ASN_URLS=""
# URLs containing bad User-Agent to block
BLACKLIST_USER_AGENT_URLS="https://raw.githubusercontent.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/\
master/_generator_lists/bad-user-agents.list"
# URLs containing bad URI to block
BLACKLIST_URI_URLS=""

# Blacklist External URLs - Ignore Lists
# URLs containing IP/network to ignore in the blacklist
BLACKLIST_IGNORE_IP_URLS=""
# URLs containing reverse DNS suffixes to ignore in the blacklist
BLACKLIST_IGNORE_RDNS_URLS=""
# URLs containing ASN to ignore in the blacklist
BLACKLIST_IGNORE_ASN_URLS=""
# URLs containing User-Agent to ignore in the blacklist
BLACKLIST_IGNORE_USER_AGENT_URLS=""
# URLs containing URI to ignore in the blacklist
BLACKLIST_IGNORE_URI_URLS=""

# Allowlist Configuration (Global Access Control)
# Enable global IP allowlist
USE_ALLOWLIST="yes"
# IP addresses/networks to allow access
ALLOWLIST_IP=""
# Country codes to allow (e.g., "US CA GB")
ALLOWLIST_COUNTRY=""
# Reverse DNS suffixes to allow
ALLOWLIST_RDNS=""
# What to do with non-allowlisted IPs: block or deny
ALLOWLIST_MODE="block"
# HTTP status code for blocked requests
ALLOWLIST_STATUS_CODE="403"

# Deny access if the country of the client is in the list (ISO 3166-1 alpha-2 format separated 
# with spaces)
# Using both a country blacklist and a whitelist simultaneously is logically redundant and not 
# recommended. If both are configured, the whitelist takes precedence, meaning only the whitelist 
# will be applied, and the blacklist will be ignored.
# Country codes to block 
BLACKLIST_COUNTRY=""

# Greylist Configuration (Admin Interface Protection)
# Enable greylist for admin interface
USE_GREYLIST="yes"
# We add internal IPs for direct access
# DO NOT USE IN PRODUCTIVE ENVIRONMENT!
# IP addresses/networks to greylist
GREYLIST_IP="10.0.0.0/8 172.16.0.0/12 192.168.0.0/16"
# Reverse DNS suffixes to greylist
GREYLIST_RDNS=""

# SSH Trusted Configuration
# Automatically add SSH connections to trusted lists
ADD_SSH_TO_TRUSTED="yes"
# List of additional trusted SSH IP addresses/networks
IP_LIST_TRUSTED=""

# FQDN Detection Configuration
FQDN_REQUIRE_SSL="yes"
FQDN_CHECK_DNS="yes"
FQDN_ALLOW_LOCALHOST="no"
FQDN_LOG_LEVEL="DEBUG"
FQDN_STRICT_MODE="yes"

# Redis Configuration
# Enable Redis support: yes or no
REDIS_ENABLED="yes"

# Syslog Configuration
# Enable external syslog: yes or no
SYSLOG_ENABLED="yes"

# Let's Encrypt Advanced Options
# Challenge type: http or dns
# we tested only http
# dns lookups are not implemented yet
LETS_ENCRYPT_CHALLENGE="http"
# Use staging environment: yes or no
LETS_ENCRYPT_STAGING="yes"
# Enable wildcard certificates: yes or no
LETS_ENCRYPT_WILDCARD="no"
# Certificate profile: classic, tlsserver, or shortlived (shortlived = 7-day validity for enhanced security)
# shortlived is not productive yet
LETS_ENCRYPT_PROFILE="classic"
# Maximum retries for certificate generation (0 = disable retries)
LETS_ENCRYPT_MAX_RETRIES="0"

# HTTP/3 Configuration
# Remember: UDP port 443 must be permitted on your perimeter firewall
# enable by default
HTTP3="yes"
# needed for HTTP3
HTTP3_ALT_SVC_PORT="443"

# DNSBL Configuration
# DNSBL (Domain Name System Blacklist) is an external database of malicious IP addresses that can be 
# queried using the DNS protocol. BunkerWeb supports automatic querying of such blacklists, providing 
# an additional layer of security.
#
# ZEN DNSBL Information:
# A DNS query to the ZEN DNSBL generally results in several distinct answers within the same DNS 
# response packet, one for each dataset where the IP is listed. The answers have a different return 
# code for each dataset, and therefore the information obtained from ZEN is the same that would be 
# obtained from separate queries to the SBL, CSS, XBL and PBL DNSBLs, but using less resources.
# add more if you want
DNSBL_LIST="bl.blocklist.de zen.spamhaus.org"

# DNS Configuration
# We have a local DNS server installed - use it for performance - change it if you don't like it
DNS_RESOLVERS="127.0.0.11"

# Demo Site Configuration
# Enable demo site with nginx-hello container (shows nginx info and request details)
DEMOSITE="yes"
# Use reverse DNS for demo site access (accessible at /demo path)
DEMOSITE_USE_REVERSE_DNS="yes"

# ModSecurity Configuration
# Enable ModSecurity Core Rule Set for enhanced security
USE_MODSECURITY_GLOBAL_CRS="yes"

# SSL/TLS Configuration
# Restrict to secure TLS versions only
SSL_PROTOCOLS="TLSv1.2 TLSv1.3"
# Uncomment and customize the line below to use specific SSL cipher suites  
#SSL_CIPHERS_CUSTOM="ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:\
#ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305"

# Default values for data preservation during uninstall
KEEP_REDIS="yes"
KEEP_DATA="yes"
KEEP_SYSLOG="yes"
FORCE_REMOVAL="no"