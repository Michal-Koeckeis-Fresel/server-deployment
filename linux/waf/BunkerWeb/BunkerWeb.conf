#!/bin/bash
#
# Copyright (c) 2025 Michal Koeckeis-Fresel
# 
# This software is dual-licensed under your choice of:
# - MIT License (see LICENSE-MIT)
# - GNU Affero General Public License v3.0 (see LICENSE-AGPL)
# 
# SPDX-License-Identifier: MIT OR AGPL-3.0-or-later
#

# BunkerWeb Configuration File
# Edit the values below before running the setup script

# Debug Configuration
DEBUG="yes"                       # Enable debug mode: yes or no (default: no)

# Default admin username
ADMIN_USERNAME="bw-admin"

# Release Channel Configuration
RELEASE_CHANNEL="RC"         # Options: latest, RC, nightly, X.Y.Z (e.g., 1.6.1)

# SSL Certificate Configuration
AUTO_CERT_TYPE="LE"              # Certificate type: LE or ZeroSSL
AUTO_CERT_CONTACT="me@example.com"  # Contact email for certificates (CHANGE THIS!)

# Domain Configuration
# we have an autodetect feature built in
# if your server already has a correct FQDN you don't need to enter anything here
FQDN=""                          # Fully Qualified Domain Name (auto-detected if not set)
SERVER_NAME=""                   # Primary domain name (same as FQDN in single domain setups)

# Network Configuration
PRIVATE_NETWORKS_ALREADY_IN_USE=""  # Space-separated list of CIDR networks to avoid
PREFERRED_DOCKER_SUBNET=""       # Preferred subnet for Docker (auto-selected if empty)

# BunkerWeb Instance Configuration
BUNKERWEB_INSTANCES="127.0.0.1"

# Multisite Configuration
MULTISITE="yes"                  # Enable multisite mode (supports multiple domains)

# Security Configuration
SECURITY_MODE="block"            # Security level: detect or block
SERVER_TYPE="http"               # Server type: http or stream

# Blacklisting, whitelisting and greylisting
# The security features for blacklisting, whitelisting, 
# and greylisting are straightforward to understand:

# Blacklisting: If a specific criterion is met, the client will be blocked.

# Whitelisting: If a specific criterion is met, the client will be allowed, 
# bypassing all additional security checks.

# Greylisting: If a specific criterion is met, the client will be allowed 
# but subjected to additional security checks else the client will be blocked.

# These mechanisms can be configured simultaneously. 
# If all three are enabled and a client meets criteria for multiple lists, 
# whitelisting takes precedence, followed by blacklisting, and finally greylisting. 
# In such cases, a whitelisted client will bypass both blacklisting and greylisting, 
# regardless of overlapping criteria.


# Allowlist Configuration (Global Access Control)
USE_ALLOWLIST="yes"               # Enable global IP allowlist
ALLOWLIST_IP=""                  # IP addresses/networks to allow access
ALLOWLIST_COUNTRY=""             # Country codes to allow (e.g., "US CA GB")
ALLOWLIST_RDNS=""                # Reverse DNS suffixes to allow
ALLOWLIST_MODE="block"           # What to do with non-allowlisted IPs: block or deny
ALLOWLIST_STATUS_CODE="403"      # HTTP status code for blocked requests

# Deny access if the country of the client is in the list 
# (ISO 3166-1 alpha-2 format separated with spaces).
# Using both a country blacklist and a whitelist simultaneously is 
# logically redundant and not recommended. If both are configured, 
# the whitelist takes precedence, meaning only the whitelist will 
# be applied, and the blacklist will be ignored.
BLACKLIST_COUNTRY=""             # Country codes to block 


# Greylist Configuration (Admin Interface Protection)
USE_GREYLIST="yes"               # Enable greylist for admin interface
# We add internal IPs for direct access
# DO NOT USE IN PRODUCTIVE ENVIRONMENT!
GREYLIST_IP="10.0.0.0/8 172.16.0.0/12 192.168.0.0/16"  # IP addresses/networks to greylist
GREYLIST_RDNS=""                 # Reverse DNS suffixes to greylist

# SSH Trusted Configuration
ADD_SSH_TO_TRUSTED="yes"         # Automatically add SSH connections to trusted lists
IP_LIST_TRUSTED=""                   # List of additional trusted SSH IP addresses/networks

# FQDN Detection Configuration
FQDN_REQUIRE_SSL="yes"
FQDN_CHECK_DNS="yes"
FQDN_ALLOW_LOCALHOST="no"
FQDN_LOG_LEVEL="DEBUG"
FQDN_STRICT_MODE="yes"

# Redis Configuration
REDIS_ENABLED="yes"              # Enable Redis support: yes or no

# Syslog Configuration
SYSLOG_ENABLED="yes"             # Enable external syslog: yes or no

# Let's Encrypt Advanced Options
LETS_ENCRYPT_CHALLENGE="http"    # Challenge type: http or dns
LETS_ENCRYPT_STAGING="yes"       # Use staging environment: yes or no
LETS_ENCRYPT_WILDCARD="no"       # Enable wildcard certificates: yes or no

# We want to test HTTP3
# Remember: UDP port 443 must be permitted on your perimeter firewall
HTTP3="yes"                      # enable by default
HTTP3_ALT_SVC_PORT="443"         # needed for HTTP3

# DNSBL (Domain Name System Blacklist) is an external database of 
# malicious IP addresses that can be queried using the DNS protocol. 
# BunkerWeb supports automatic querying of such blacklists, 
# providing an additional layer of security.
# The default lists are:
# bl.blocklist.de sbl.spamhaus.org xbl.spamhaus.org

DNSBL_LIST="bl.blocklist.de sbl.spamhaus.org xbl.spamhaus.org" # add more if you want

# we have a local DNS server installed - use it for performance - change it if you don't like it
DNS_RESOLVERS="127.0.0.11"

# Default values for data preservation during uninstall
KEEP_REDIS="yes"
KEEP_DATA="yes"
KEEP_SYSLOG="yes"
FORCE_REMOVAL="no"

USE_MODSECURITY_GLOBAL_CRS="yes"
SSL_PROTOCOLS="TLSv1.2 TLSv1.3"
SSL_CIPHERS_CUSTOM="ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305"